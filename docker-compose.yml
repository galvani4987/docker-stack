# version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  caddy:
    image: caddy:alpine
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config:/etc/caddy # Mounts the whole config directory
      - caddy_data:/data
      - caddy_config:/config
    env_file: # Add env_file to load .env variables
      - .env
    networks:
      - app-network
    restart: unless-stopped

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_TYPE=${N8N_DB_TYPE}
      - DB_POSTGRESDB_HOST=${N8N_DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_PORT=${N8N_DB_POSTGRESDB_PORT}
      - DB_POSTGRESDB_USER=${N8N_DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_POSTGRESDB_PASSWORD}
      - DB_POSTGRESDB_DATABASE=${N8N_DB_POSTGRESDB_DATABASE}
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=${N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS}
      - N8N_RUNNERS_ENABLED=${N8N_RUNNERS_ENABLED}
      - N8N_HOST=n8n
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-America/Sao_Paulo} # Default if not in .env
      - TZ=${TZ:-America/Sao_Paulo} # Default if not in .env
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_started

  redis:
    image: redis:7.4.4-alpine
    container_name: redis
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env # To ensure REDIS_PASSWORD from .env is available
    volumes:
      - redis_data:/data
    networks:
      - app-network

  homer:
    image: b4bz/homer:latest
    container_name: homer
    user: "1000:1000" # Ensure this is appropriate for your host system's permissions for ./config/homer
    volumes:
      - ./config/homer:/www/assets
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - INIT_ASSETS=0 # Prevents re-initialization of assets on every start if config.yml is managed by user
      # - UID=1000 # Not strictly needed if user: "1000:1000" is set and image supports it
      # - GID=1000 # Not strictly needed

  waha:
    image: devlikeapro/waha:arm # Using the latest tag as per docs
    container_name: waha
    restart: unless-stopped
    env_file:
      - .env
    # Ports are commented out by default after initial QR scan.
    # For initial setup, uncomment to scan QR code via http://localhost:3000 or http://<server_ip>:3000
    # Make sure your server's firewall allows port 3000 if accessing remotely for setup.
    # ports:
    #   - "127.0.0.1:3000:3000" # Expose only on host for security during setup
    volumes:
      - ./config/waha/sessions:/app/.sessions # Persistent sessions
      - ./config/waha/media:/app/.media       # Persistent media files
    networks:
      - app-network
    logging: # Recommended logging configuration from WAHA docs
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  n8n_data:
  redis_data:
